/*
 * Copyright 2011 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 2014 All rights (c)KYmedia Co.,Ltd. reserved.
 * 
 * This software is the confidential and proprietary information
 *  of (c)KYmedia Co.,Ltd. ("Confidential Information").
 * 
 * project	:	Karaoke.APP
 * filename	:	ActionBarListAdapter.java
 * author	:	isyoon
 *
 * <pre>
 * kr.kymedia.karaoke.app.adpt
 *    |_ ActionBarListAdapter.java
 * </pre>
 * 
 */

package kr.kymedia.karaoke.apps.adpt;

import java.util.ArrayList;

import kr.kymedia.karaoke.apps.R;
import kr.kymedia.karaoke.util.TextUtil;
import kr.kymedia.karaoke.widget.util.WidgetUtils;

import android.content.Context;
import android.graphics.Typeface;
import android.util.TypedValue;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.TextView;

/**
 *
 * TODO<br>
 * 
 * <pre></pre>
 *
 * @author isyoon
 * @since 2014. 4. 23.
 * @version 1.0
 */
public class _ActionBarListAdapter extends ArrayAdapter<TabsPagerInfo> {
	Context context;
	int resource;
	String menu_name;

	public _ActionBarListAdapter(Context context, int resource, int textViewResourceId,
			ArrayList<TabsPagerInfo> objects, String menu_name) {
		super(context, resource, textViewResourceId, objects);
		// TODO Auto-generated constructor stub
		this.context = context;
		this.resource = resource;
		this.menu_name = menu_name;
	}

	public View getCustomView(int position, ViewGroup parent, boolean dropdown) {
		LayoutInflater inflater = LayoutInflater.from(context);
		View customView = inflater.inflate(resource, parent, false);
		TabsPagerInfo info = getItem(position);

		int color = R.color.solid_white_choco;
		if (dropdown) {
			color = R.color.solid_black;
		}

		// RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) customView.getLayoutParams();
		// params.setMarginEnd(margin);
		// float scale = context.getResources().getDisplayMetrics().density;
		View left_span = customView.findViewById(R.id.left_span);
		if (left_span != null) {
			if (dropdown) {
				left_span.setVisibility(View.VISIBLE);
			} else {
				left_span.setVisibility(View.GONE);
			}

		}

		TextView main_title = (TextView) customView.findViewById(R.id.main_title);
		if (main_title != null) {
			main_title.setTextColor(context.getResources().getColor(color));
			main_title.setText(info.name);
			if (dropdown) {
				main_title.setTextSize(TypedValue.COMPLEX_UNIT_SP, 16.0f);
				main_title.setTypeface(Typeface.DEFAULT);
				WidgetUtils.setTextViewMarquee(main_title, false);
				customView.findViewById(R.id.left_span).setVisibility(View.VISIBLE);
				customView.findViewById(R.id.upper_span).setVisibility(View.VISIBLE);
				customView.findViewById(R.id.lower_span).setVisibility(View.VISIBLE);
			} else {
				main_title.setTextSize(TypedValue.COMPLEX_UNIT_SP, 22.0f);
				main_title.setTypeface(Typeface.DEFAULT_BOLD);
				if (!TextUtil.isEmpty(menu_name)) {
					main_title.setText(menu_name + " - " + info.name);
				}
				WidgetUtils.setTextViewMarquee(main_title, true);
				customView.findViewById(R.id.left_span).setVisibility(View.GONE);
				customView.findViewById(R.id.upper_span).setVisibility(View.GONE);
				customView.findViewById(R.id.lower_span).setVisibility(View.GONE);
			}
		}

		TextView sub_title = (TextView) customView.findViewById(R.id.sub_title);
		if (sub_title != null) {
			sub_title.setTextColor(context.getResources().getColor(color));
			sub_title.setText(menu_name);
			if (dropdown) {
				sub_title.setVisibility(View.GONE);
			} else {
				sub_title.setVisibility(View.VISIBLE);
			}
			sub_title.setVisibility(View.GONE);
		}
		return customView;
	}

	@Override
	public View getDropDownView(int position, View convertView, ViewGroup parent) {

		// return super.getDropDownView(position, convertView, parent);
		return getCustomView(position, parent, true);
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {

		// return super.getView(position, convertView, parent);
		return getCustomView(position, parent, false);
	}

}
